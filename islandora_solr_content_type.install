<?php
/**
 * @file
 * Handles install and uninstall of module.
 * Fields, instance, and variables for our content type.
 * For brevity field names are shortened to "isct" - the initialism of the module.
 */


/**
 * Implements hook_install().
 */
function islandora_solr_content_type_install() {
  node_types_rebuild();
  // Note that normally one would call node_add_body_field() for their content type
  // We do not, instead we create our own "body field" that forces the full page view. 
  // This content type works best in the "full" view mode...
  islandora_solr_content_type_add_custom_fields();
  islandora_solr_content_type_add_variables();
}

function islandora_solr_content_type_add_custom_fields() {
  //Add our content fields
  foreach (_islandora_solr_content_type_installed_fields() as $field) {
    field_create_field($field);
  }
  //Add instances of base fields.
  foreach (_islandora_solr_content_type_instances() as $fieldinstance) {
    field_create_instance($fieldinstance);
  }

}

function islandora_solr_content_type_add_variables() {
  foreach(_islandora_solr_content_type_variables() as $var => $option) {
    variable_set($var, $option);
  }
}

/**
 * Implements hook_uninstall().
 */
function islandora_solr_content_type_uninstall() {
  $sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
  $result = db_query($sql, array(':type' => 'islandora_solr_content_type'));
  $nids = array();
  foreach ($result as $row) {
    $nids[] = $row->nid;
  }
  node_delete_multiple($nids);
  islandora_solr_content_type_delete_custom_fields();
  node_type_delete($node_name);
  field_purge_batch(1000);
  islandora_solr_content_type_remove_variables();
}

function islandora_solr_content_type_delete_custom_fields() {
  foreach (array_keys(_islandora_solr_content_type_installed_fields()) as $field) {
    field_delete_field($field);
  }
  $instances = field_info_instances('node', 'islandora_solr_content_type');
  foreach ($instances as $instance_name => $fieldinstance) {
    field_delete_instance($fieldinstance);
  }
}

function islandora_solr_content_type_remove_variables() {
  foreach(array_keys(_islandora_solr_content_type_variables()) as $var) {
    variable_del($var);
  }
}

/**
 * BEGIN VARIABLES, FIELDS AND INSTANCES
 */

function _islandora_solr_content_type_variables() {
  $variables = array();

  // No comments
  $variables['comment_islandora_solr_content_type'] = '0';
  
  // No submitted info (i.e. author info and date)
  $variables['node_submitted_islandora_solr_content_type'] = '0';
  
  // Default state to published, without other options (e.g., sticky, promoted, etc.).
  $variables['node_options_islandora_solr_content_type'] = array(
    '0' => 'status'
    );

  // Auto path generation default
  $variables['pathauto_node_islandora_solr_content_type_pattern'] = 'collections/[node:title]';
  
  // Menu Default
  $variables['menu_options_islandora_solr_content_type'] = array( 
    '0' => 'main-menu',
    );

  // Menu Parent (collections). NOT SUPER SURE ABOUT THIS ONE.
  $variables['menu_parent_islandora_solr_content_type'] = 'main-menu:455';
  
  return $variables;
}

function _islandora_solr_content_type_installed_fields() {
  $fields = array();

  $fields['isct_body'] = array(
    'entity_types' => array('node'),
    'translatable' => 1,
    'settings' => array(),
    'field_name' => 'isct_body',
    'type' => 'text_long',
    'module' => 'text',
    'active' => 1,
    'locked' => 1,
    'cardinality' => 1,
    'deleted' => 0,
  );

  $fields['isct_solr_query'] = array(
    'entity_types' => array('node'),
    'translatable' => 0,
    'settings' => array(),
    'field_name' => 'isct_solr_query',
    'type' => 'text_long',
    'module' => 'text',
    'active' => 1,
    'locked' => 1,
    'cardinality' => 1,
    'deleted' => 0,
  );

  $fields['isct_query_rows'] = array(
    'entity_types' => array('node'),
    'translatable' => 1,
    'settings' => array(),
    'field_name' => 'isct_query_rows',
    'type' => 'text',
    'module' => 'text',
    'active' => 1,
    'locked' => 1,
    'cardinality' => 1,
    'deleted' => 0,
  );

  $fields['isct_display_facets'] = array(
    'entity_types' => array('node'),
    'translatable' => 0,
    'settings' => array(
      'allowed_values' => array( //This needs to be changed before any real release. This shouldn't be static.
        'mods_subject_topic_ms' => 'mods_subject_topic_ms',
        'mods_genre_ms' => 'mods_genre_ms',
        'mods_subject_name_personal_namePart_ms' => 'mods_subject_name_personal_namePart_ms',
        'mods_subject_name_corporate_namePart_ms' => 'mods_subject_name_corporate_namePart_ms',
        'mods_name_personal_namePart_ms' => 'mods_name_personal_namePart_ms',
        'mods_name_corporate_namePart_ms' => 'mods_name_corporate_namePart_ms',
        'mods_relatedItem_host_titleInfo_title_ms' => 'mods_relatedItem_host_titleInfo_title_ms',
        'mods_relatedItem_series_titleInfo_title_ms' => 'mods_relatedItem_series_titleInfo_title_ms',
      ),
      'allowed_values_function' => '',
    ),
    'field_name' => 'isct_display_facets',
    'module' => 'list',
    'type' => 'list_text',
    'active' => 1,
    'locked' => 1,
    'cardinality' => -1,
    'deleted' => 0,
  );

  return $fields;
}

function _islandora_solr_content_type_instances() {

  $instances = array();
  $t = get_t();

  $instances['isct_body'] = array(
    'bundle' => 'islandora_solr_content_type',
    'field_name' => 'isct_body',
    'type' => 'text_long',
    'label' => $t('Collection Summary'),
    'deleted' => 0,
    'entity_type' => 'node',
    'required' => 0,
    'settings' => array(
      'text_processing' => 1,
      'user_register_form' => 0,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'text',
      'type' => 'text_textarea',
      'weight' => 1,
    ),
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'settings' => array(),
        'weight' => 1,
      ),
      'full' => array(
        'label' => 'hidden',
        'settings' => array(),
        'weight' => 1,
      ),
    ),
  );

  $instances['isct_solr_query'] = array(
    'bundle' => 'islandora_solr_content_type',
    'field_name' => 'isct_solr_query',
    'type' => 'text',
    'label' => $t('Collection SOLR Query - landing page'),
    'default_value' => array(
      0 => array(
        'value' => $t('RELS_EXT_isMemberOf_uri_ms:"info:fedora/bc:barnard-literary-magazine"'),
      ),
    ),
    'deleted' => 0,
    'description' => $t('The SOLR query that will generate desired \'collection view.\' <br>
    An easy way to create this question is to visit the <a href="'.$GLOBALS['base_root'].'/islandora/search">search page</a> and start with a basic query.
The URL bar will display the encoded query string. This will give you an idea of a query string.<br><strong><em>Note: You are not restricted to the SOLR search fields available to a site visitor.</em></strong><br>
Examples: 
<ul>
<li>Get all yearbooks by mods title AND only display their cover (by collection membership): mods_relatedItem_host_titleInfo_title_ms:"Mortarboard" AND RELS_EXT_isMemberOf_uri_ms:"info:fedora/islandora:bookCollection"</li>
<li>Get all photographs using mods: mods_genre_ms:"photographs"</li>
</ul>'),
    'entity_type' => 'node',
    'required' => 1,
    'settings' => array(
      'text_processing' => 0,
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'text',
      'settings' => array(
        'rows' => 2,
      ),
      'type' => 'text_textarea',
      'weight' => 2,
    ),
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 2,
      ),
      'full' => array(
        'label' => 'hidden',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 2,
      ),
    ),
  );

  $instances['isct_query_rows'] = array(
    'bundle' => 'islandora_solr_content_type',
    'field_name' => 'isct_query_rows',
    'type' => 'text',
    'label' => $t('Number of results to display per page'),
    'default_value' => array(
      0 => array(
        'value' => $t('8'),
      ),
    ),
    'deleted' => 0,
    'description' => $t('The number of records (rows) to display from the SOLR query.'),
    'entity_type' => 'node',
    'required' => 1,
    'settings' => array(
      'text_processing' => 0,
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'text',
      'settings' => array(
        'size' => 40,
      ),
      'type' => 'text',
      'weight' => 3,
    ),
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 2,
      ),
      'full' => array(
        'label' => 'hidden',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 2,
      ),
    ),
  );

$instances['isct_display_facets'] = array(
    'bundle' => 'islandora_solr_content_type',
    'field_name' => 'isct_display_facets',
    'type' => 'list',
    'label' => $t('Facets to display on page'),
    'default_value' => array( // this should not be static same as with the field.
      0 => array('value' => 'mods_subject_topic_ms',),
      1 => array('value' => 'mods_genre_ms',),
      2 => array('value' => 'mods_subject_name_personal_namePart_ms',),
      3 => array('value' => 'mods_subject_name_corporate_namePart_ms',),
      4 => array('value' => 'mods_name_personal_namePart_ms',),
      5 => array('value' => 'mods_name_corporate_namePart_ms',),
      6 => array('value' => 'mods_relatedItem_host_titleInfo_title_ms',),
      7 => array('value' => 'mods_relatedItem_series_titleInfo_title_ms',),
    ),
    'deleted' => 0,
    'entity_type' => 'node',
    'required' => 0,
    'settings' => array(
      'user_register_form' => FALSE,
    ),
    'widget' => array(
      'active' => 1,
      'module' => 'options',
      'settings' => array(),
      'type' => 'options_buttons',
      'weight' => 4,
    ),
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'module' => 'list',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 2,
      ),
      'full' => array(
        'label' => 'hidden',
        'settings' => array(),
        'type' => 'hidden',
        'weight' => 2,
      ),
    ),
  );

  return $instances;
}

?>